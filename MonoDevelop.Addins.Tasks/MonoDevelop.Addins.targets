<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="MonoDevelop.Addins.Tasks.ResolveMonoDevelopAddins" AssemblyFile="MonoDevelop.Addins.Tasks.dll" />
  <UsingTask TaskName="MonoDevelop.Addins.Tasks.GetDefaultMonoDevelopLocations" AssemblyFile="MonoDevelop.Addins.Tasks.dll" />
  <UsingTask TaskName="MonoDevelop.Addins.Tasks.GenerateDependencyAttributes" AssemblyFile="MonoDevelop.Addins.Tasks.dll" />
  <UsingTask TaskName="MonoDevelop.Addins.Tasks.CreatePackage" AssemblyFile="MonoDevelop.Addins.Tasks.dll" />
  <!--
  TODO:
  * the Addin Maker addin should set MDBinDir so it can target custom MD version
  * support downloading missing dependencies
  -->
  <PropertyGroup>
    <MDProfileVersion Condition="'$(MDProfileVersion)' == ''">5.0</MDProfileVersion>
    <MDProfilePath Condition="'$(MDProfilePath)' == ''">$(MONODEVELOP_TEST_PROFILE)</MDProfilePath>
  </PropertyGroup>

  <!-- always reference the core addins and assemblies -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml" />
    <AddinReference Include="MonoDevelop.Core"/>
    <AddinReference Include="MonoDevelop.Ide" />
    <Reference Include="Mono.Addins">
        <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Debugging">
        <Private>False</Private>
    </Reference>
    <Reference Include="Mono.TextEditor">
        <Private>False</Private>
    </Reference>
    <Reference Include="Mono.Cairo">
        <Private>False</Private>
    </Reference>
    <Reference Include="ICSharpCode.NRefactory">
        <Private>False</Private>
    </Reference>
    <Reference Include="ICSharpCode.NRefactory.CSharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="gtk-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="atk-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="glib-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="gdk-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="pango-sharp">
        <Private>False</Private>
    </Reference>
    <Reference Include="Xwt">
        <Private>False</Private>
    </Reference>
    <Reference Include="IKVM.Reflection">
        <Private>False</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json">
        <Private>False</Private>
    </Reference>
  </ItemGroup>

  <PropertyGroup>
    <!-- FIXME logically this should be ResolveReferencesDependsOn but XS currently uses ResolveAssemblyReferences -->
    <ResolveAssemblyReferencesDependsOn>
      _MDResolveAddinReferences;
      $(ResolveAssemblyReferencesDependsOn)
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>

  <Target Name="ResolveMonoDevelopLocations">
    <GetDefaultMonoDevelopLocations ProfileVersion="$(MDProfileVersion)" ProfilePath="$(MDProfilePath)" ReferencePath="$(ReferencePath)">
      <Output TaskParameter="ConfigDir"   PropertyName="MDConfigDir"   Condition="'$(MDConfigDir)' == ''"    />
      <Output TaskParameter="AddinsDir"   PropertyName="MDAddinsDir"   Condition="'$(MDAddinsDir)' == ''"    />
      <Output TaskParameter="BinDir" PropertyName="MDBinDir" Condition="'$(MDBinDir)' == ''"  />
    </GetDefaultMonoDevelopLocations>

    <Message Text = "MDConfigDir:   $(MDConfigDir)" />
    <Message Text = "MDAddinsDir:   $(MDAddinsDir)" />
    <Message Text = "MDBinDir:      $(MDBinDir)" />

    <PropertyGroup>
      <MDToolExe>$(MDBinDir)\mdtool.exe</MDToolExe>
    </PropertyGroup>

    <Error Text = "Bin directory not found: $(BinDir)" Condition="!Exists('$(MDToolExe)')" />

    <PropertyGroup>
      <AssemblySearchPaths>$(MDBinDir);$(AssemblySearchPaths)</AssemblySearchPaths>
      <MDDatabaseDir>$(IntermediateOutputPath)mdam\db</MDDatabaseDir>
      <MDConfigDir Condition="'$(MDConfigDir)'==''">$(IntermediateOutputPath)mdam\config</MDConfigDir>
      <MDAddinsDir Condition="'$(MDAddinsDir)'==''">$(IntermediateOutputPath)mdam\addins</MDAddinsDir>
    </PropertyGroup>
  </Target>

  <Target Name="_MDResolveAddinReferences" DependsOnTargets="ResolveMonoDevelopLocations">
    <ResolveMonoDevelopAddins
      ConfigDir="$(MDConfigDir)"
      AddinsDir="$(MDAddinsDir)"
      DatabaseDir="$(MDDatabaseDir)"
      BinDir="$(MDBinDir)"
      AddinReferences="@(AddinReference)"
    >
      <Output TaskParameter="AssemblyReferences" ItemName ="Reference" />
      <Output TaskParameter="AssemblyReferences" ItemName ="_MDResolvedAddinAssemblies" />
      <Output TaskParameter="ResolvedAddins" ItemName ="_MDResolvedAddins" />
    </ResolveMonoDevelopAddins>
  </Target>

  <Target Name="CreatePackage" DependsOnTargets="Build">
    <CreatePackage
      ConfigDir="$(MDConfigDir)"
      AddinsDir="$(MDAddinsDir)"
      DatabaseDir="$(MDDatabaseDir)"
      BinDir="$(MDBinDir)"
      OutputDir="$(OutDir)"
      AddinFile="$(TargetPath)">
          <Output TaskParameter="PackageFile" PropertyName="PackageFile" />
      </CreatePackage>
  </Target>

  <!--
  <Target Name="InstallAddin" DependsOnTargets="CreatePackage">
    <PropertyGroup>
      <_MDToolCommand>"$(MDToolExe)"</_MDToolCommand>
      <_MDToolCommand Condition="'$(OS)'=='Unix'">mono </_MDToolCommand>
    </PropertyGroup>
    <Exec Command='$(_MDToolCommand) setup install -y "$(PackageFile)"' StandardOutputImportance="Low" />
  </Target>
  -->

  <PropertyGroup>
    <CoreCompileDependsOn>
      _MDCollectGeneratedCode;
      $(CoreCompileDependsOn)
    </CoreCompileDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <_MDAddinDepsFile>$(IntermediateOutputPath)MonoDevelop-Addin-Deps.g$(DefaultLanguageSourceExtension)</_MDAddinDepsFile>
  </PropertyGroup>

  <Target Name="_MDCollectGeneratedCode" DependsOnTargets="_MDGenerateDependencyAttributes">
    <ItemGroup>
      <Compile Include="$(_MDAddinDepsFile)" />
      <FileWrites Include="$(_MDAddinDepsFile)" />
    </ItemGroup>
  </Target>

  <Target Name="_MDGenerateDependencyAttributes" Inputs="$(MSBuildProjectFile);@(_MDResolvedAddins->'%(AddinFile)')" Outputs="$(_MDAddinDepsFile)" DependsOnTargets="_MDResolveAddinReferences">
    <GenerateDependencyAttributes
      AddinReferences="@(_MDResolvedAddins)"
      Filename="$(_MDAddinDepsFile)"
      Language="$(Language)"
    />
  </Target>
</Project>
